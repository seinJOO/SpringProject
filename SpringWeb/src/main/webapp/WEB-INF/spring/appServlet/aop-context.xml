<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- 설정파일 여러개 사용하기
	1. web.xml에 새로운 설정파일 추가
	2. servlet-context.xml의 설정 복사하기 (생성 설정 순서 중요)
	3. mapping 태그 요청이 들어오면 아래 bean클래스를 실행 -->
	<interceptors>
	<!-- myPage, updatePage로 매핑된 컨트롤러 실행 전에 preHandle이 실행됨 -->
		<interceptor>
			<!-- mapping path="인터셉트할 대상" -->
			<mapping path="/session/myPage"/>
			<mapping path="/session/updatePage"/>
			<beans:bean class="com.zerock.util.LoginInterceptor" />
		</interceptor>
	</interceptors>
	<!-- 1. aop라이브러리 다운 (pom.xml)
		 2. namespace 추가
		 3. aop 스캔 설정 -->
		 <context:component-scan base-package="com.zerock.util"/>
		 <!-- aop어노테이션을 사용할 수 있게 하는 태그 -->
		 <aop:aspectj-autoproxy />
		 
	<interceptors>
		<interceptor>
			<mapping path="/board/delete"/>
			<mapping path="/board/modify"/>
			<mapping path="/board/update"/>
			<mapping path="/board/register"/>
			<beans:bean class="com.zerock.util.BoardInterceptor" />
		</interceptor>
	</interceptors>	
</beans:beans>
